--- etc/init.d/boot	2001/08/08 07:09:58	1.1
+++ etc/init.d/boot	2001/08/08 08:15:10
@@ -338,26 +338,55 @@
 swapon -a &> /dev/null
 rc_status -v1 -r
 
-# set and adjust the CMOS clock
-if test "$HWCLOCK_ACCESS" != "no" ; then
-echo -n Setting up the CMOS clock
-CLOCKCMD=hwclock
-while read line; do
-	case "$line" in
-#		*MacRISC*)  CLOCKCMD=clock ;;
-		*MTX\ Plus*) CLOCKCMD="hwclock --mtxplus --directisa" ;;
-		*PReP\ Dual\ MTX*) CLOCKCMD="hwclock --mtxplus --directisa" ;;
-	esac
-done < /proc/cpuinfo
+# set and adjust the Hardware/system clock
+if test "$HWCLOCK_ACCESS" = "no" ; then
+    echo -n Setting up the system clock
+    # On s390 the hwclock is set outside Linux currently.  The kernel
+    # always assumes it to be set to UTC.  So if it is set to local
+    # time, we have to compensate for that.  We might achieve this
+    # using this special settimeofday(2) linux feature:
 
-test "$GMT" != "YAST_ASK" && $CLOCKCMD --hctosys $GMT
-rc_status
-test -f /etc/adjtime || echo "0.0 0 0.0" > /etc/adjtime
-if test "$GMT" != "YAST_ASK"  -a "$START_XNTPD" != "yes" ; then
-    $CLOCKCMD --adjust $GMT
+    #	Under  Linux there is some peculiar `warp clock' semantics
+    #	associated to the settimeofday system call if on the  very
+    #	first  call  (after  booting) that has a non-NULL tz argu-
+    #	ment, the tv argument is NULL and the tz_minuteswest field
+    #	is  nonzero.  In  such  a case it is assumed that the CMOS
+    #	clock is on local time, and that it has to be  incremented
+    #	by  this  amount to get UTC system time.  No doubt it is a
+    #	bad idea to use this feature.
+    #                                     settimeofday(2) man page
+
+    # But unless someone complains we simply will use date(1) to shift
+    # the system time by the difference between UTC and local time, if
+    # the system clock is set to local time.  This will introduce a
+    # minimal shift due to the delay between gettimeofday and
+    # settimeofday, and it only works as long as $0 is executed
+    # exactly once, at boot.
+
+    if test "$GMT" = ""; then
+        date $(date -u +'%m%d%H%M%Y')
+	rc_status
+    fi
+    rc_status -v -r
+else
+    echo -n Setting up the CMOS clock
+    CLOCKCMD=hwclock
+    while read line; do
+	    case "$line" in
+    #		*MacRISC*)  CLOCKCMD=clock ;;
+		    *MTX\ Plus*) CLOCKCMD="hwclock --mtxplus --directisa" ;;
+		    *PReP\ Dual\ MTX*) CLOCKCMD="hwclock --mtxplus --directisa" ;;
+	    esac
+    done < /proc/cpuinfo
+
+    test "$GMT" != "YAST_ASK" && $CLOCKCMD --hctosys $GMT
     rc_status
-fi
-rc_status -v -r
+    test -f /etc/adjtime || echo "0.0 0 0.0" > /etc/adjtime
+    if test "$GMT" != "YAST_ASK"  -a "$START_XNTPD" != "yes" ; then
+	$CLOCKCMD --adjust $GMT
+	rc_status
+    fi
+    rc_status -v -r
 fi
 
 #
