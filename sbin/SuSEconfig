#! /bin/sh
# Copyright (c) 1996,98, 99 SuSE GmbH Nuernberg, Germany.  All rights reserved.
#
# Author: Burchard Steinbild <bs@suse.de>, 1996-97
#         Florian La Roche <florian@suse.de>, 1996
# i18n support added by Aleksey Smirnov <smi@logic.ru>
#  & Aleksey Novodvorsky <aen@logic.ru> from IPLabs Linux Team, Moscow.
# Attention! The shell must be restarted before localisation takes effect!
#
# Rewrote i18n support to use RC_LANG and RC_LC_* rc.config variables
# Bernhard Kaindl <bk@suse.de>, 1999
#
# Change ROOT_LOGIN_REMOTE support to edit PAM config files.
# Thorsten Kukuk <kukuk@suse.de>, 1999
#
# Move PAM configuration into SuSEconfig.pam
# Thorsten Kukuk <kukuk@suse.de>, 2000
#

echo "Started the SuSE-Configuration Tool."

# check if we are started as root
# only one of UID and USER must be set correctly
if test "$UID" != "0" -a "$USER" != root -a -z "$ROOT" ; then
    echo "You must be root to start $0."
    exit 1
fi

# The environment variable ROOT indicates the root of the system to be
# managed by SuSEconfig when that root is not '/'
r=$ROOT


FASTRUN=false
export FASTRUN
CHECK_NEWPACKAGE=true
export CHECK_NEWPACKAGE
FORCE_REPLACE=false
export FORCE_REPLACE
VERBOSE=false
export VERBOSE
DO_RESTARTS=true
export DO_RESTARTS

while test $# -gt 0; do
  case $1 in
    *-verbose)
      VERBOSE=true
      echo Running in verbose mode.
    ;;
    *-quick)
      FASTRUN=true
      echo Running in quick mode.
    ;;
    *-nonewpackage)
      CHECK_NEWPACKAGE=false
      echo Skipping new package checks.
    ;;
    *-force)
      FORCE_REPLACE=true
    ;;
    *-norestarts)
      DO_RESTARTS=false
    ;;
    *-module)
      FASTRUN=true
      ONLY_MODULE=$2
      echo Running module $ONLY_MODULE only
      shift
    ;;
    *)
      echo Unknown parameter $1.
      echo Usage: SuSEconfig "[--quick|--nonewpackage|--force|--verbose] [--module name]"
      exit 1
    ;;
  esac
  shift
done

test "$FASTRUN" = false -a "$CHECK_NEWPACKAGE" = true && \
    echo Running in full featured mode.

#
# where can SuSEconfig store data in running system?
#
LIBDIR=$r/var/adm/SuSEconfig

#
# LASTRUN and OLDHOSTENTRY must be a file name placed in LIBDIR
#
LASTRUN=$LIBDIR/lastrun
IS_RUNNING=$r/var/lock/SuSEconfig-is-running
MD5DIR=$LIBDIR/md5
export MD5DIR
OLDHOSTENTRY=$LIBDIR/oldhostentry

test -f $r/lib/YaST/SuSEconfig.functions || {
    echo "ERROR - can not find $r/lib/YaST/SuSEconfig.functions!!"
    echo "This should not happen.  Exit..."
    exit 1
}

. $r/lib/YaST/SuSEconfig.functions

echo "Reading $r/etc/rc.config and updating the system..."

if test ! -f $r/etc/rc.config ; then
    echo "No $r/etc/rc.config found."
    exit 1
fi

. $r/etc/rc.config

if test -n "$ENABLE_SUSECONFIG" -a "$ENABLE_SUSECONFIG" = "no" ; then
    echo "SuSEconfig is disabled in $r/etc/rc.config. Exit..."
    exit 0
fi

# rc.config sets a new PATH
if test "$r" != ""; then
        PATH=$PATH:$r/bin:$r/usr/bin:$r/sbin:$r/usr/sbin
        export PATH
fi

#
# first of all test if we have space.  If not abort.
#
for DIR in $r/etc $r/usr/lib/irc $r/var/lib/news ; do
    my_test_write $DIR || continue
    dd if=/dev/zero of=$DIR/testforspace.SuSEconfig bs=1k count=50 \
        2> /dev/null  || {
        rm -f $DIR/testforspace.SuSEconfig
        echo
        echo
        echo We do not have enough disk space in $DIR. Exit.
        echo
        exit 1
    }
    rm -f $DIR/testforspace.SuSEconfig
done


#
# now make sure, that LIBDIR exists
#
test -e $LIBDIR || mkdir -p $LIBDIR

#
# delete very old lock files
#

if test -x /usr/bin/find -a -x /usr/bin/xargs ; then
    /usr/bin/find $IS_RUNNING -cmin +1000 2> /dev/null \
    | /usr/bin/xargs --no-run-if-empty rm -f
fi

#
# check locking
#

if test -e $IS_RUNNING ; then
    echo -n "Another SuSEconfig seems to run.  Waiting up to 60 seconds"
    for i in 1 2 3 4 5 6 7 8 9 0 ; do
        for j in 1 2 3 4 5 6 ; do
            echo -n .
            sleep 1
            test -e $IS_RUNNING || break
        done
        test -e $IS_RUNNING || break
    done
    if test -e $IS_RUNNING ; then
        echo
        echo
        echo "Giving up..."
        echo
        echo "ps a | grep SuSEconfig"
        ps a | grep SuSEconfig
        echo
        echo "If You think, there is no other SuSEconfig running, please call"
        echo
        echo "    rm $IS_RUNNING "
        echo
        echo "Then you can start SuSEconfig again."
        echo
        exit 1
    fi
    echo
fi

echo $$ > $IS_RUNNING

if test -n "$FQHOSTNAME" -a "$CHECK_ETC_HOSTS" = "yes" ; then
    #
    # maybe there was another name or IP Adress before. When it has been
    # changed, this could lead into trouble, if it stays in /etc/hosts.
    #
    if test -e $OLDHOSTENTRY ; then
        for OLDENTRY in `cat $OLDHOSTENTRY` ; do
            cat $r/etc/hosts | grep -vw "$OLDENTRY" > $r/etc/hosts.wrzl
            cp -p $r/etc/hosts.wrzl $r/etc/hosts
            rm -f $r/etc/hosts.wrzl
        done
        rm -f $OLDHOSTENTRY
    fi

    #
    # check, if we have localhost defined...
    #
    grep localhost $r/etc/hosts > /dev/null 2>&1
    if test $? -eq 1 ; then
        echo -e "\n127.0.0.1       localhost" >> $r/etc/hosts
    fi

    echo $FQHOSTNAME >> $OLDHOSTENTRY
    NICKNAME=`echo $FQHOSTNAME | sed -e"s:\..*::"`
    echo $NICKNAME > $r/etc/HOSTNAME.SuSEconfig
    check_md5_and_move $r/etc/HOSTNAME

    NET_DEVICE_FOUND=false

    if test -n "$NETCONFIG" -a "$NETCONFIG" != "YAST_ASK" ; then
        NICKNAME_PRINTED=false
        for I in $NETCONFIG ; do
            eval IPADDR=\$IPADDR$I
            if test -n "$IPADDR" ; then
                test -x /usr/bin/cut && \
                    IPADDR=`echo "$IPADDR              " | /usr/bin/cut -c -15`
                grep -w ${IPADDR} $r/etc/hosts > /dev/null || {
                    if test "$NICKNAME_PRINTED" = false ; then
                        echo "$IPADDR	$FQHOSTNAME 	$NICKNAME" >> $r/etc/hosts
                        NICKNAME_PRINTED=true
                    else
                        echo "$IPADDR	$FQHOSTNAME" >> $r/etc/hosts
                    fi
                }
                echo "$IPADDR" >> $OLDHOSTENTRY
                NET_DEVICE_FOUND=true
            fi
        done
    fi

    # to get plp to work, we have to add hostname to localhost.
    if test "$NET_DEVICE_FOUND" = false -a "$NETCONFIG" != "YAST_ASK" ; then
        grep -vw $FQHOSTNAME $r/etc/hosts > $r/etc/hosts.tmp
        echo "127.0.0.2      	$FQHOSTNAME 	$NICKNAME" >> $r/etc/hosts.tmp
        cp -p $r/etc/hosts.tmp $r/etc/hosts
        rm -f $r/etc/hosts.tmp
    fi

    #
    # now beautify /etc/hosts
    #
    if test "$BEAUTIFY_ETC_HOSTS" = yes ; then
        grep "^#" $r/etc/hosts > $r/etc/hosts.wrzl
        echo >> $r/etc/hosts.wrzl
        echo >> $r/etc/hosts.wrzl
        grep -v "^#" $r/etc/hosts | grep -v "^\$" | sort >> $r/etc/hosts.wrzl
        mv $r/etc/hosts.wrzl $r/etc/hosts
    fi
fi

test -n "$ORGANIZATION" && {
    echo "$ORGANIZATION" > $r/etc/organization.SuSEconfig
    check_md5_and_move $r/etc/organization
}

test -n "$NNTPSERVER" && {
    echo "$NNTPSERVER" > $r/etc/nntpserver.SuSEconfig
    check_md5_and_move $r/etc/nntpserver
}

test -n "$FROM_HEADER" && {
    echo "$FROM_HEADER" > $r/etc/inews_mail_gateway.SuSEconfig
    check_md5_and_move $r/etc/inews_mail_gateway
}

if test -n "$TIMEZONE" -a "$TIMEZONE" != "YAST_ASK" -a -x /usr/sbin/zic ; then
    /usr/sbin/zic -l $TIMEZONE
fi

if test -n "$MOUSE" -a "$MOUSE" != "YAST_ASK" ; then
    rm -f $r/dev/mouse
    ln -sf $MOUSE $r/dev/mouse
fi
if test -n "$MODEM" -a "$MODEM" != "YAST_ASK" ; then
    rm -f $r/dev/modem
    ln -sf $MODEM $r/dev/modem
fi

if test ! -e /sbin/conf.d/SuSEconfig.sendmail -a \
    "$SENDMAIL_TYPE" != no -a "$SENDMAIL_TYPE" != "YAST_ASK" ; then
        SENDMAIL_FILE=$r/etc/sendmail.smtp.cf
        if test "$SENDMAIL_TYPE" = uucp-only; then
                SENDMAIL_FILE=$r/etc/sendmail.uucp.cf
        fi
        test -e $SENDMAIL_FILE && \
        sed -e "s/^DS.*\$/DS${SENDMAIL_SMARTHOST}/" \
                -e "s/^Cw.*\$/Cw${SENDMAIL_LOCALHOST}/" \
                -e "s/^DR.*\$/DR${SENDMAIL_RELAY}/" \
                -e "s/^DH.*\$/DH${SENDMAIL_RELAY}/" \
                -e "s/^DM.*\$/DM${FROM_HEADER}/" \
                < $SENDMAIL_FILE > $r/etc/sendmail.cf.SuSEconfig
        test -e $SENDMAIL_FILE && check_md5_and_move $r/etc/sendmail.cf
fi


if test -n "$FROM_HEADER" -a -d $r/var/lib/news/ ; then
    echo "$FROM_HEADER" > $r/var/lib/news/mailname.SuSEconfig
    check_md5_and_move $r/var/lib/news/mailname
    echo "$FROM_HEADER" > $r/var/lib/news/whoami.SuSEconfig
    check_md5_and_move $r/var/lib/news/whoami
fi

if test "$SORT_PASSWD_BY_UID" = yes ; then
    for i in passwd group ; do
        cat $r/etc/$i | grep "^root:" > $r/etc/$i.t
        cat $r/etc/$i | grep -v "^+" | grep -v ":-[0-9]:-[0-9]:" | \
            grep -v "^root:" | sort -n -t : +2 >> $r/etc/$i.t
        test -s $r/etc/$i.t && {
            cat $r/etc/$i | grep ":-[0-9]:-[0-9]:" >> $r/etc/$i.t
            cat $r/etc/$i | grep "^+" >> $r/etc/$i.t
            cmp -s $r/etc/$i $r/etc/$i.t || {
                echo "Sorting /etc/$i. Saving old to /etc/$i.unsorted."
                mv $r/etc/$i $r/etc/$i.unsorted
                cp $r/etc/$i.t $r/etc/$i
            }
        }
        rm $r/etc/$i.t
    done
fi

#
# check login mode
#
test "$CHECK_INITTAB" = yes && {
    XCONFIGFILE=/etc/XF86Config
    test -f $r/etc/X11/XF86Config && XCONFIGFILE=/etc/X11/XF86Config
    if [ ! -r $r/$XCONFIGFILE -a "$DISPLAYMANAGER" != console ]; then
        echo -n "XFree86 not configured yet! No graphical login. "
        echo "Check /etc/X11/XF86Config or /etc/XF86Config."
        DISPLAYMANAGER=none
    fi

    case "$DISPLAYMANAGER" in
        kdm|KDM|xdm|XDM|gdm|GDM|wdm|WDM) INITRL=5;;
        *)               INITRL=3;;
    esac

    case "$CONSOLE_SHUTDOWN" in
        ignore)
          CA_SEARCH="^ca::ctrlaltdel.*"
          CA_LINE="#ca::ctrlaltdel:/sbin/shutdown -h -t 4 now"
        ;;
        halt)
          CA_SEARCH="^ca::ctrlaltdel.*"
          CA_LINE="ca::ctrlaltdel:/sbin/shutdown -h -t 4 now"
        ;;
        reboot)
          CA_SEARCH="^ca::ctrlaltdel.*"
          CA_LINE="ca::ctrlaltdel:/sbin/shutdown -r -t 4 now"
        ;;
        *)
          CA_SEARCH="wrzlgnmpf-this-should-not-be-found"
          CA_LINE=""
        ;;
    esac
    if test -n "$SERIAL_CONSOLE" ; then
      SERIAL_CON_LINE=${SERIAL_CONSOLE%%,*}
      SERIAL_CON_SPEED=${SERIAL_CONSOLE##*,}
      SERIAL_CON_SHORT=${SERIAL_CON_LINE##tty}
      SERIAL_CON_STRING="$SERIAL_CON_SHORT:12345:respawn:/sbin/agetty -L $SERIAL_CON_SPEED $SERIAL_CON_LINE"
    else
      SERIAL_CON_LINE=""
      SERIAL_CON_SPEED=""
      SERIAL_CON_SHORT=""
      SERIAL_CON_STRING="#S0:12345:respawn:/sbin/agetty -L 9600 ttyS0"
    fi

    cp -p $r/etc/inittab $r/etc/inittab.SuSEconfig || {
        echo "Unexpected Error - emergency exit..."
        rm -f $IS_RUNNING
        exit 1
    }

    cat $r/etc/inittab | \
        sed -e "s%^id:[0-9sSa-cA-C]*:initdefault:%id:$INITRL:initdefault:%" \
            -e "s%$CA_SEARCH%$CA_LINE%" \
            -e "s%.*/sbin/agetty -L.*%$SERIAL_CON_STRING%" \
        > $r/etc/inittab.SuSEconfig

    test -s $r/etc/inittab.SuSEconfig || {
        echo "Unexpected Error - emergency exit..."
        rm -f $IS_RUNNING
        exit 1
    }

    cmp -s $r/etc/inittab.SuSEconfig $r/etc/inittab || {
        mv $r/etc/inittab.SuSEconfig $r/etc/inittab
        echo "Installing new $r/etc/inittab"
    }
    rm -f $r/etc/inittab.SuSEconfig

    if test -n "$SERIAL_CON_LINE" ; then
     grep "$SERIAL_CON_LINE" $r/etc/securetty >/dev/null 2>/dev/null || \
       { 
         echo $SERIAL_CON_LINE >> $r/etc/securetty
         echo "Added $SERIAL_CON_LINE to /etc/securetty"
       }
     rm -f $r/etc/securetty.SuSEconfig
    fi
    unset INITRL
    unset SERIAL_CON_LINE
    unset SERIAL_CON_SPEED
    unset SERIAL_CON_SHORT
    unset SERIAL_CON_STRING
}

#
# setting dosemu security level.
#
if test -n "$PERMISSION_SECURITY" ; then
    for LEVEL in $PERMISSION_SECURITY ; do
        if test -f $r/etc/dosemu.users.$LEVEL -a \
                -L $r/etc/dosemu.users ; then
            rm -f $r/etc/dosemu.users
            ln -s dosemu.users.$LEVEL $r/etc/dosemu.users
        fi
    done
fi

test -x /sbin/ldconfig -a -z "$r" -a "$CHECK_NEWPACKAGE" != false && \
    /sbin/ldconfig


#
# the following stuff should be done in running system...
#
# first things, that have to be done in 'normal' systems as well as in
# 'demo mode' system.

if test -z "$r" ; then
    SUB_SCRIPTS=""
    if test -n "$ONLY_MODULE" ; then
        if test -f /sbin/conf.d/SuSEconfig.$ONLY_MODULE ; then
            SUB_SCRIPTS=/sbin/conf.d/SuSEconfig.$ONLY_MODULE
        else
            echo Module $ONLY_MODULE does not exist
        fi
    elif test "$FASTRUN" = "true" ; then
        SUB_SCRIPTS="/sbin/conf.d/SuSEconfig.pam /sbin/conf.d/SuSEconfig.sendmail /sbin/conf.d/SuSEconfig.ypclient /sbin/conf.d/SuSEconfig.kdm"
    else
        SUB_SCRIPTS="/sbin/conf.d/SuSEconfig.*"
    fi
    #
    # Now start the package skripts
    #
    for SKRIPT in $SUB_SCRIPTS ; do
        test -f $SKRIPT || continue
        case "$SKRIPT" in
          *~|*.swp|*.bak|*.sav|*.save|*.rpmsave|*.rpmorig|*.rpmnew)
            continue
            ;;
          *)
            echo Executing $SKRIPT...
            bash $SKRIPT
            ;;
        esac
    done
fi


#
# Now do things, only allowed in running 'normal' system.
#
if test -z "$r" -a ! -e $r/usr/lib/YaST/.DemoMode ; then
    #
    # we have only one package with a /usr/bin/vi symlink, but several vi
    # packages. If it does not exist, create it
    #
    if test ! -e /usr/bin/vi ; then
        rm -f /usr/bin/vi
        test -e /usr/bin/xvi && ln -s xvi /usr/bin/vi
        test -e /usr/bin/nvi && ln -s nvi /usr/bin/vi
        test -e /usr/bin/elvis && ln -s elvis /usr/bin/vi
        test -e /usr/bin/vim && ln -s vim /usr/bin/vi
    fi

    if test "$FASTRUN" != "true" ; then
        if test -x /sbin/depmod ; then
            MOD_DIR=/lib/modules/`uname -r`
            if test -d $MOD_DIR ; then
                /sbin/depmod -a 2> /dev/null > /dev/null
            fi
        fi

        if test "$HOW_TO_HANDLE_COMMERCIAL_LIBS" = link -o \
                "$HOW_TO_HANDLE_COMMERCIAL_LIBS" = clean ; then
            if test -x /usr/bin/ldd -a \
                    -x /usr/bin/dirname -a \
                    -x /usr/bin/basename ; then
                for DYNBIN in /bin/*.SuSE-dynamic \
                              /sbin/*.SuSE-dynamic \
                              /usr/bin/*.SuSE-dynamic \
                              /usr/sbin/*.SuSE-dynamic \
                              /usr/X11R6/bin/*.SuSE-dynamic ; do
                    test -x $DYNBIN || continue
                    DYNDIR=`/usr/bin/dirname $DYNBIN`
                    DYNBASE=`/usr/bin/basename $DYNBIN .SuSE-dynamic`
                    test -e $DYNDIR/$DYNBASE -a ! -L $DYNDIR/$DYNBASE && {
                        echo skipping $DYNBIN. $DYNDIR/$DYNBASE is not a link...
                        continue
                    }
                    test ! -e $DYNDIR/$DYNBASE.SuSE-static -a \
                           "$HOW_TO_HANDLE_COMMERCIAL_LIBS" != clean && {
                        echo skipping $DYNBIN. $DYNDIR/$DYNBASE.SuSE-static does not exist...
                        continue
                    }
                    LIBS_MISSING=false
                    for DUMMY in `/usr/bin/ldd $DYNBIN | grep "not found"` ; do
                        LIBS_MISSING=true
                    done
                    if test "$LIBS_MISSING" = true ; then
                        USEDDYN=$DYNBASE.SuSE-static
                        OTHERDYN=$DYNDIR/$DYNBASE.SuSE-dynamic
                    else
                        USEDDYN=$DYNBASE.SuSE-dynamic
                        OTHERDYN=$DYNDIR/$DYNBASE.SuSE-static
                    fi
                    test -e $DYNDIR/$USEDDYN || {
                        echo skipping $DYNBIN - please check for $USEDDYN...
                        continue
                    }
                    rm -f $DYNDIR/$DYNBASE
                    ln -s $USEDDYN $DYNDIR/$DYNBASE
                    test "$HOW_TO_HANDLE_COMMERCIAL_LIBS" = clean -a \
                         -e "$OTHERDYN" && {
                        echo deleting obsolete $OTHERDYN...
                        rm -f $OTHERDYN
                    }
                done
            fi
        fi

        if test -n "$CREATE_INFO_DIR" -a "$CREATE_INFO_DIR" = "yes" -a \
            "$CHECK_NEWPACKAGE" != false ; then
            if test -x /usr/bin/perl -a -d /usr/share/info/ ; then
                if test ! -f /usr/share/info/dir \
                    -o /usr/share/info/dir -ot /usr/share/info/ \
                    -o /usr/share/info/dir -ot /usr/info/ \
                    -o /usr/share/info/dir -ot /usr/lib/info/ \
                    -o /usr/share/info/dir -ot /usr/local/info/ \
                    -o /usr/share/info/dir -ot /usr/local/lib/info/ \
                    -o /usr/share/info/dir -ot /usr/X11R6/info/ \
                    -o /usr/share/info/dir -ot /usr/X11R6/lib/info/ \
                    -o /usr/share/info/dir -ot /usr/X11R6/lib/xemacs/info/ \
                    ; then
                    my_test_write /usr/share/info && {
                        echo "Creating /usr/share/info/dir..."
                        /usr/bin/mkinfodir
                    }
                fi
            fi
        fi

        if test -x /usr/bin/mandb -a "$CHECK_NEWPACKAGE" != false ; then
            echo "Processing index files of all manpages..."
            /usr/bin/mandb -q -s
        fi
    fi

    if test -n "$CHECK_PERMISSIONS" -a \
            -x /usr/bin/perl -a -x /usr/bin/chkstat ; then

        PERMISSIONS_FILES=""
	PACKAGE_PERMFILES=(/etc/permissions.d/*)
	PACKAGE_PERMFILES=(${PACKAGE_PERMFILES[*]##*/})
	PACKS=${PACKAGE_PERMFILES[*]%%.*}
	if test -n "$PACKS" ; then
	    test -x /usr/bin/sort && {
	        PACKS=`for j in $PACKS ; do echo $j ; done | /usr/bin/sort -u`
	    }
	    RPMPACKS=(`rpm -q $PACKS 2> /dev/null`)
	    RPMPACKS=(${RPMPACKS[*]%-*-*})
            for i in ${RPMPACKS[*]} ; do
                test -e /etc/permissions.d/$i && \
                    PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions.d/$i"
                for PERMEXT in $PERMISSION_SECURITY ; do
                    test -e /etc/permissions.d/$i.$PERMEXT && \
                        PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions.d/$i.$PERMEXT"
                done
            done
	fi
    
        test -e /etc/permissions && \
          PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions"
        for PERMEXT in $PERMISSION_SECURITY ; do
            test -e /etc/permissions.$PERMEXT && \
                PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions.$PERMEXT"
        done
    
        for PERMFILE in $PERMISSIONS_FILES ; do
            if test "$CHECK_PERMISSIONS" = "set" ; then
    	    /usr/bin/chkstat -set $PERMFILE
            elif test "$CHECK_PERMISSIONS" = "warn" ; then
    	    /usr/bin/chkstat $PERMFILE
            fi
        done
    fi

    if test ! -e /sbin/conf.d/SuSEconfig.sendmail -a ! -e /etc/aliases.db ; then
        #
        # maybe we have smail installed - make sure /etc/aliases is setup
        # correctly
        #
        NEWALIASES=`type -p newaliases`
        test -n "$NEWALIASES" && eval $NEWALIASES
    fi
fi

#
# safety-check: look for duplicated variables in /etc/rc.config
#
MYTMP=`mktemp -d /tmp/rcconfigchk.XXXXXX`
grep -v "^#" $r/etc/rc.config | grep -v "^$" | cut -d= -f1 | uniq -d \
  > $MYTMP/toomuch
if [ -s $MYTMP/toomuch ] ; then
  echo "This is a warning message." > $MYTMP/rc.config_check
  echo "The following variables seem to be doubled in /etc/rc.config:" >> $MYTMP/rc.config_check
  cat $MYTMP/toomuch >> $MYTMP/rc.config_check
  echo "Please check which of the instances is correct." >> $MYTMP/rc.config_check
  test -d /var/adm/notify/warnings && \
    mv $MYTMP/rc.config_check /var/adm/notify/warnings
fi
rm -rf $MYTMP

#
# now look for reports and mail them
#
if test -z "$r" -a "$SENDMAIL_TYPE" != "YAST_ASK" -a \
    -x /usr/bin/mail -a -x /usr/sbin/sendmail -a \
    -n "$MAIL_REPORTS_TO" -a "$FASTRUN" != "true" ; then
    if test "$MAIL_LEVEL" = all ; then
        FILES_TO_MAIL="/var/adm/notify/messages/* \
                       /var/adm/notify/warnings/* \
                       /var/adm/notify/log/*"
    else
        FILES_TO_MAIL="/var/adm/notify/messages/* \
                       /var/adm/notify/warnings/*"
    fi
    for FILE in $FILES_TO_MAIL ; do
        test -f $FILE || continue
        cat $FILE | /usr/bin/mail $MAIL_REPORTS_TO \
            -s "SuSEconfig: `basename $FILE`"
        rm -f $FILE
        sleep 2
    done
    rm -f /var/adm/notify/log/*
fi

#
# Now store date for next call
#
if test -z "$r" -a "$FASTRUN" != "true" ; then
    if test -x /bin/date ; then
        /bin/date > $LASTRUN
    else
        cat /dev/null > $LASTRUN
    fi
fi

#
# we have finished and can remove our lock file.
#
rm -f $IS_RUNNING

echo "Finished."
exit 0
