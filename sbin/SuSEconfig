#! /bin/sh
# Copyright (c) 1996,98, 99 SuSE GmbH Nuernberg, Germany.  All rights reserved.
#
# Author: Burchard Steinbild <bs@suse.de>, 1996-97
#         Florian La Roche <florian@suse.de>, 1996
# i18n support added by Aleksey Smirnov <smi@logic.ru>
#  & Aleksey Novodvorsky <aen@logic.ru> from IPLabs Linux Team, Moscow.
# Attention! The shell must be restarted before localisation takes effect!
#
# Rewrote i18n support to use RC_LANG and RC_LC_* rc.config variables
# Bernhard Kaindl <bk@suse.de>, 1999
#
# Change ROOT_LOGIN_REMOTE support to edit PAM config files.
# Thorsten Kukuk <kukuk@suse.de>, 1999
#
# Move PAM configuration into SuSEconfig.pam
# Thorsten Kukuk <kukuk@suse.de>, 2000
#

echo "Started the SuSE-Configuration Tool."

# check if we are started as root
# only one of UID and USER must be set correctly
if test "$UID" != "0" -a "$USER" != root -a -z "$ROOT" ; then
    echo "You must be root to start $0."
    exit 1
fi

r=$ROOT


FASTRUN=false
export FASTRUN
CHECK_NEWPACKAGE=true
export CHECK_NEWPACKAGE
FORCE_REPLACE=false
export FORCE_REPLACE
VERBOSE=false
export VERBOSE
DO_RESTARTS=true
export DO_RESTARTS

while test $# -gt 0; do
  case $1 in
    *-verbose)
      VERBOSE=true
      echo Running in verbose mode.
    ;;
    *-quick)
      FASTRUN=true
      echo Running in quick mode.
    ;;
    *-nonewpackage)
      CHECK_NEWPACKAGE=false
      echo Skipping new package checks.
    ;;
    *-force)
      FORCE_REPLACE=true
    ;;
    *-norestarts)
      DO_RESTARTS=false
    ;;
    *-module)
      FASTRUN=true
      ONLY_MODULE=$2
      echo Running module $ONLY_MODULE only
      shift
    ;;
    *)
      echo Unknown parameter $1.
      echo Usage: SuSEconfig "[--quick|--nonewpackage|--force|--verbose] [--module name]"
      exit 1
    ;;
  esac
  shift
done

test "$FASTRUN" = false -a "$CHECK_NEWPACKAGE" = true && \
    echo Running in full featured mode.

#
# where can SuSEconfig store data in running system?
#
LIBDIR=$r/var/adm/SuSEconfig

#
# LASTRUN and OLDHOSTENTRY must be a file name placed in LIBDIR
#
LASTRUN=$LIBDIR/lastrun
IS_RUNNING=$r/var/lock/SuSEconfig-is-running
MD5DIR=$LIBDIR/md5
export MD5DIR
OLDHOSTENTRY=$LIBDIR/oldhostentry

test -f $r/lib/YaST/SuSEconfig.functions || {
    echo "ERROR - can not find $r/lib/YaST/SuSEconfig.functions!!"
    echo "This should not happen.  Exit..."
    exit 1
}

. $r/lib/YaST/SuSEconfig.functions

echo "Reading $r/etc/rc.config and updating the system..."

if test ! -f $r/etc/rc.config ; then
    echo "No $r/etc/rc.config found."
    exit 1
fi

. $r/etc/rc.config

if test -n "$ENABLE_SUSECONFIG" -a "$ENABLE_SUSECONFIG" = "no" ; then
    echo "SuSEconfig is disabled in $r/etc/rc.config. Exit..."
    exit 0
fi

# rc.config sets a new PATH
if test "$r" != ""; then
        PATH=$PATH:$r/bin:$r/usr/bin:$r/sbin:$r/usr/sbin
        export PATH
fi

#
# first of all test if we have space.  If not abort.
#
for DIR in $r/etc $r/usr/lib/irc $r/var/lib/news ; do
    my_test_write $DIR || continue
    dd if=/dev/zero of=$DIR/testforspace.SuSEconfig bs=1k count=50 \
        2> /dev/null  || {
        rm -f $DIR/testforspace.SuSEconfig
        echo
        echo
        echo We do not have enough disk space in $DIR. Exit.
        echo
        exit 1
    }
    rm -f $DIR/testforspace.SuSEconfig
done


#
# now make sure, that LIBDIR exists
#
test -e $LIBDIR || mkdir -p $LIBDIR

#
# delete very old lock files
#

if test -x /usr/bin/find -a -x /usr/bin/xargs ; then
    /usr/bin/find $IS_RUNNING -cmin +1000 2> /dev/null \
    | /usr/bin/xargs --no-run-if-empty rm -f
fi

#
# check locking
#

if test -e $IS_RUNNING ; then
    echo -n "Another SuSEconfig seems to run.  Waiting up to 60 seconds"
    for i in 1 2 3 4 5 6 7 8 9 0 ; do
        for j in 1 2 3 4 5 6 ; do
            echo -n .
            sleep 1
            test -e $IS_RUNNING || break
        done
        test -e $IS_RUNNING || break
    done
    if test -e $IS_RUNNING ; then
        echo
        echo
        echo "Giving up..."
        echo
        echo "ps a | grep SuSEconfig"
        ps a | grep SuSEconfig
        echo
        echo "If You think, there is no other SuSEconfig running, please call"
        echo
        echo "    rm $IS_RUNNING "
        echo
        echo "Then you can start SuSEconfig again."
        echo
        exit 1
    fi
    echo
fi

echo $$ > $IS_RUNNING

if test -n "$FQHOSTNAME" -a "$CHECK_ETC_HOSTS" = "yes" ; then
    #
    # maybe there was another name or IP Adress before. When it has been
    # changed, this could lead into trouble, if it stays in /etc/hosts.
    #
    if test -e $OLDHOSTENTRY ; then
        for OLDENTRY in `cat $OLDHOSTENTRY` ; do
            cat $r/etc/hosts | grep -vw "$OLDENTRY" > $r/etc/hosts.wrzl
            cp -p $r/etc/hosts.wrzl $r/etc/hosts
            rm -f $r/etc/hosts.wrzl
        done
        rm -f $OLDHOSTENTRY
    fi

    #
    # check, if we have localhost defined...
    #
    grep localhost $r/etc/hosts > /dev/null 2>&1
    if test $? -eq 1 ; then
        echo -e "\n127.0.0.1       localhost" >> $r/etc/hosts
    fi

    echo $FQHOSTNAME >> $OLDHOSTENTRY
    NICKNAME=`echo $FQHOSTNAME | sed -e"s:\..*::"`
    echo $NICKNAME > $r/etc/HOSTNAME.SuSEconfig
    check_md5_and_move $r/etc/HOSTNAME

    NET_DEVICE_FOUND=false

    if test -n "$NETCONFIG" -a "$NETCONFIG" != "YAST_ASK" ; then
        NICKNAME_PRINTED=false
        for I in $NETCONFIG ; do
            eval IPADDR=\$IPADDR$I
            if test -n "$IPADDR" ; then
                test -x /usr/bin/cut && \
                    IPADDR=`echo "$IPADDR              " | /usr/bin/cut -c -15`
                grep -w ${IPADDR} $r/etc/hosts > /dev/null || {
                    if test "$NICKNAME_PRINTED" = false ; then
                        echo "$IPADDR	$FQHOSTNAME 	$NICKNAME" >> $r/etc/hosts
                        NICKNAME_PRINTED=true
                    else
                        echo "$IPADDR	$FQHOSTNAME" >> $r/etc/hosts
                    fi
                }
                echo "$IPADDR" >> $OLDHOSTENTRY
                NET_DEVICE_FOUND=true
            fi
        done
    fi

    # to get plp to work, we have to add hostname to localhost.
    if test "$NET_DEVICE_FOUND" = false -a "$NETCONFIG" != "YAST_ASK" ; then
        grep -vw $FQHOSTNAME $r/etc/hosts > $r/etc/hosts.tmp
        echo "127.0.0.2      	$FQHOSTNAME 	$NICKNAME" >> $r/etc/hosts.tmp
        cp -p $r/etc/hosts.tmp $r/etc/hosts
        rm -f $r/etc/hosts.tmp
    fi

    #
    # now beautify /etc/hosts
    #
    if test "$BEAUTIFY_ETC_HOSTS" = yes ; then
        grep "^#" $r/etc/hosts > $r/etc/hosts.wrzl
        echo >> $r/etc/hosts.wrzl
        echo >> $r/etc/hosts.wrzl
        grep -v "^#" $r/etc/hosts | grep -v "^\$" | sort >> $r/etc/hosts.wrzl
        mv $r/etc/hosts.wrzl $r/etc/hosts
    fi
fi


if test -n "$CREATE_RESOLVCONF" -a "$CREATE_RESOLVCONF" = "yes" -a \
    "$DHCLIENT" != yes ; then
    if test -z "$SEARCHLIST" -a -z "$NAMESERVER" ; then
        # user wants no DNS - delete it.
        rm -f $r/etc/resolv.conf
    else
        echo_warning /etc/resolv.conf \
             "# Change variables (NAMESERVER + SEARCHLIST) in /etc/rc.config instead." \
            > $r/etc/resolv.conf.SuSEconfig

        test -n "$SEARCHLIST" && echo -e "search $SEARCHLIST" >> $r/etc/resolv.conf.SuSEconfig
        for NSIP in $NAMESERVER; do
            echo -e "nameserver $NSIP" >> $r/etc/resolv.conf.SuSEconfig
        done
        check_md5_and_move $r/etc/resolv.conf
    fi
fi


test -n "$ORGANIZATION" && {
    echo "$ORGANIZATION" > $r/etc/organization.SuSEconfig
    check_md5_and_move $r/etc/organization
}

test -n "$NNTPSERVER" && {
    echo "$NNTPSERVER" > $r/etc/nntpserver.SuSEconfig
    check_md5_and_move $r/etc/nntpserver
}

test -n "$FROM_HEADER" && {
    echo "$FROM_HEADER" > $r/etc/inews_mail_gateway.SuSEconfig
    check_md5_and_move $r/etc/inews_mail_gateway
}

if test -n "$IRCSERVER" ; then
    if my_test_write $r/usr/lib/irc; then
        (for i in $IRCSERVER; do
                echo $i
        done) > $r/usr/lib/irc/ircII.servers.SuSEconfig
        check_md5_and_move $r/usr/lib/irc/ircII.servers
    fi
fi

if test -n "$TIMEZONE" -a "$TIMEZONE" != "YAST_ASK" -a -x /usr/sbin/zic ; then
    /usr/sbin/zic -l $TIMEZONE
fi

if test -n "$MOUSE" -a "$MOUSE" != "YAST_ASK" ; then
    rm -f $r/dev/mouse
    ln -sf $MOUSE $r/dev/mouse
fi
if test -n "$MODEM" -a "$MODEM" != "YAST_ASK" ; then
    rm -f $r/dev/modem
    ln -sf $MODEM $r/dev/modem
fi

if test ! -e /sbin/conf.d/SuSEconfig.sendmail -a \
    "$SENDMAIL_TYPE" != no -a "$SENDMAIL_TYPE" != "YAST_ASK" ; then
        SENDMAIL_FILE=$r/etc/sendmail.smtp.cf
        if test "$SENDMAIL_TYPE" = uucp-only; then
                SENDMAIL_FILE=$r/etc/sendmail.uucp.cf
        fi
        test -e $SENDMAIL_FILE && \
        sed -e "s/^DS.*\$/DS${SENDMAIL_SMARTHOST}/" \
                -e "s/^Cw.*\$/Cw${SENDMAIL_LOCALHOST}/" \
                -e "s/^DR.*\$/DR${SENDMAIL_RELAY}/" \
                -e "s/^DH.*\$/DH${SENDMAIL_RELAY}/" \
                -e "s/^DM.*\$/DM${FROM_HEADER}/" \
                < $SENDMAIL_FILE > $r/etc/sendmail.cf.SuSEconfig
        test -e $SENDMAIL_FILE && check_md5_and_move $r/etc/sendmail.cf
fi


if test -n "$FROM_HEADER" -a -d $r/var/lib/news/ ; then
    echo "$FROM_HEADER" > $r/var/lib/news/mailname.SuSEconfig
    check_md5_and_move $r/var/lib/news/mailname
    echo "$FROM_HEADER" > $r/var/lib/news/whoami.SuSEconfig
    check_md5_and_move $r/var/lib/news/whoami
fi

#
# Now setup /etc/SuSEconfig stuff
#
mkdir -p $r/etc/SuSEconfig
echo_warning /etc/SuSEconfig/profile \
        "# Change variables in /etc/rc.config instead." \
        > $r/etc/SuSEconfig/profile.SuSEconfig
echo_warning /etc/SuSEconfig/csh.login \
        "# Change variables in /etc/rc.config instead." \
        > $r/etc/SuSEconfig/csh.login.SuSEconfig
echo_warning /etc/SuSEconfig/csh.cshrc \
        "# Change variables in /etc/rc.config instead." \
        > $r/etc/SuSEconfig/csh.cshrc.SuSEconfig

if test "$CWD_IN_ROOT_PATH" = "yes" ; then
    echo "test \"\$UID\" = 0 && PATH=\"\$PATH:.\"" \
        >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "if ( \"\$uid\" == \"0\" ) set path=( \$path . )" \
        >> $r/etc/SuSEconfig/csh.login.SuSEconfig
fi



# start of i18n support
echo '# start of i18n support'       >> $r/etc/SuSEconfig/profile.SuSEconfig
echo '# start of i18n support'       >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig

if test -z "$RC_LANG" ; then
        case "$LANGUAGE" in
                italian)        RC_LANG=it_IT.ISO-8859-1 ;;
                russian)        RC_LANG=ru_RU.KOI8-R     ;;
                brazilian)      RC_LANG=pt_BR.ISO-8859-1 ;;
                english)        RC_LANG=en_US            ;;
                japanese)       RC_LANG=ja_JP            ;;
                korean)         RC_LANG=ko_KR            ;;
                *)              RC_LANG="$LANGUAGE"      ;;
        esac
fi

locale_vars="\
LANG         \
LC_ALL       \
LC_MESSAGES  \
LC_CTYPE     \
LC_COLLATE   \
LC_TIME      \
LC_NUMERIC   \
LC_MONETARY"

if test "$ROOT_USES_LANG" = yes ; then
    message="\
#
# /etc/rc.config: ROOT_USES_LANG = yes:
#
# All users get all the locale variables from /etc/rc.config:
#"

    # sh und ksh:
    echo "$message"                  >> $r/etc/SuSEconfig/profile.SuSEconfig
    for var in $locale_vars
    do
        if eval test "\$RC_$var"; then
            eval echo "$var=\\\"\$RC_$var\\\""
            echo "export $var"
        else
            echo "unset $var"
        fi
    done                             >> $r/etc/SuSEconfig/profile.SuSEconfig

    # csh:
    echo "$message"                  >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    for var in $locale_vars
    do
        if eval test "\$RC_$var"; then
            eval echo "setenv $var \\\"\$RC_$var\\\""
        else
            echo "unsetenv $var"
        fi
    done                             >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig

else
    if test "$ROOT_USES_LANG" = ctype ; then
    root_message="\
    #
    # /etc/rc.config: ROOT_USES_LANG = ctype:
    #
    # root uses only the LC_CTYPE, we export all the other locale variables
    # from /etc/rc.config as-is, and don't assign them to their effective
    # counterparts. We unset all effective locale variables but LC_CTYPE
    # and set LANG to POSIX.
    # This is necessary for non iso-8859-1 roots to be able to type all
    # the characters in X Windows.
    # root can later decide to use specific locale variables with simple
    # assignments and do not need to source rc.config. i.e. LANG=\$RC_LANG
    #"
    else
    root_message="\
    #
    # /etc/rc.config: ROOT_USES_LANG != yes|ctype:
    #
    # root doesn't use locales, we export the locale variables from
    # /etc/rc.config as-is, and don't assign them to their effective
    # counterparts. We unset all effective locale variables and set
    # LANG to POSIX.
    # root can later decide to use specific locale variables with simple
    # assignments and do not need to source rc.config. i.e. LANG=\$RC_LANG
    #"
    fi

    user_message="\
    #
    # All other users get all the locale variables from /etc/rc.config:
    #"

    # sh und ksh:
    echo 'if test "$UID" = 0 ; then' >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "$root_message"             >> $r/etc/SuSEconfig/profile.SuSEconfig
    for var in $locale_vars
    do
        if eval test "\$RC_$var"; then
            eval echo "'    'RC_$var=\\\"\$RC_$var\\\""
            echo "    export RC_$var"
        fi
	if test "$ROOT_USES_LANG" = ctype -a "$var" = LC_CTYPE ; then
            if eval test "\$RC_$var"; then
               eval echo "'    '$var=\\\"\$RC_CTYPE\\\""
            else
               eval echo "'    '$var=\\\"\$RC_LANG\\\""
            fi
            echo "    export LC_CTYPE"
        else
            echo "    unset $var"
        fi
    done                             >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo 'else'                      >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "$user_message"             >> $r/etc/SuSEconfig/profile.SuSEconfig
    for var in $locale_vars
    do
        if eval test "\$RC_$var"; then
            eval echo "'    '$var=\\\"\$RC_$var\\\""
            echo "    export $var"
        else
            echo "    unset $var"
        fi
    done                             >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo 'fi'                        >> $r/etc/SuSEconfig/profile.SuSEconfig

    # csh:
    echo 'if ( "$uid" == "0" ) then' >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    echo "$root_message"             >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    for var in $locale_vars
    do
        if eval test "\$RC_$var"; then
            eval echo "'    'setenv RC_$var \\\"\$RC_$var\\\""
        fi
	if test "$ROOT_USES_LANG" = ctype -a "$var" = LC_CTYPE ; then
            if eval test "\$RC_$var"; then
               eval echo "'    'setenv $var \\\"\$RC_CTYPE\\\""
            else
               eval echo "'    'setenv $var \\\"\$RC_LANG\\\""
            fi
        else
            echo "    unsetenv $var"
        fi
    done                             >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    echo 'else'                      >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    echo "$user_message"             >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    for var in $locale_vars
    do
        if eval test "\$RC_$var"; then
            eval echo "'    'setenv $var \\\"\$RC_$var\\\""
        else
            echo "    unsetenv $var"
        fi
    done                             >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
    echo 'endif'                     >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi

echo '# end of i18n support'         >> $r/etc/SuSEconfig/profile.SuSEconfig
echo '# end of i18n support'         >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
# end of i18n support



if test -n "$FROM_HEADER" ; then
    echo "FROM_HEADER=\"$FROM_HEADER\"" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export FROM_HEADER" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv FROM_HEADER \"$FROM_HEADER\"" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$SCANNER_TYPE" ; then
    echo "SCANNER_TYPE=$SCANNER_TYPE" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export SCANNER_TYPE" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv SCANNER_TYPE $SCANNER_TYPE" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$DOC_HOST" ; then
    echo "SUSE_DOC_HOST=$DOC_HOST" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export SUSE_DOC_HOST" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv SUSE_DOC_HOST $DOC_HOST" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/opt/kde ; then
    echo "KDEDIR=/opt/kde" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export KDEDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv KDEDIR /opt/kde" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/X11R6/lib/qt ; then
    echo "QTDIR=/usr/X11R6/lib/qt" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export QTDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv QTDIR /usr/X11R6/lib/qt" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/qt ; then
    echo "QTDIR=/usr/lib/qt" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export QTDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv QTDIR /usr/lib/qt" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/opt/gnome ; then
    echo "GNOMEDIR=/opt/gnome" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export GNOMEDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv GNOMEDIR /opt/gnome" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/X11R6/lib/xad ; then
    echo "XADIDIR=/usr/X11R6/lib/xad" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export XADIDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv XADIDIR /usr/X11R6/lib/xad" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/dvgt_help ; then
    echo "DV_IMMED_HELP=/usr/lib/dvgt_help" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export DV_IMMED_HELP" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv DV_IMMED_HELP /usr/lib/dvgt_help" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/maple ; then
    echo "MAPLE=/usr/lib/maple" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export MAPLE" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv MAPLE /usr/lib/maple" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/rasmol ; then
    echo "RASMOLPATH=/usr/lib/rasmol" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export RASMOLPATH" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv RASMOLPATH /usr/lib/rasmol" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/mars_e ; then
    echo "DMARSCONF=/usr/lib/mars_e" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export DMARSCONF" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv DMARSCONF /usr/lib/mars_e" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/crisp/macros ; then
    echo "CRPATH=/usr/lib/crisp/macros" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export CRPATH" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv CRPATH /usr/lib/crisp/macros" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/cint ; then
    echo "CINTSYSDIR=/usr/lib/cint" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export CINTSYSDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv CINTSYSDIR /usr/lib/cint" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/lib/maxwell ; then
    echo "MAXHOME=/usr/lib/maxwell" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export MAXHOME" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv MAXHOME /usr/lib/maxwell" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -d $r/usr/X11R6/lib/blender ; then
    echo "BLENDERDIR=/usr/X11R6/lib/blender" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export BLENDERDIR" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv BLENDERDIR /usr/X11R6/lib/blender" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$HTTP_PROXY" ; then
    echo "http_proxy=$HTTP_PROXY" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export http_proxy" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv http_proxy $HTTP_PROXY" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$FTP_PROXY" ; then
    echo "ftp_proxy=$FTP_PROXY" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export ftp_proxy" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv ftp_proxy $FTP_PROXY" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$GOPHER_PROXY" ; then
    echo "gopher_proxy=$GOPHER_PROXY" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export gopher_proxy" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv gopher_proxy $GOPHER_PROXY" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$NO_PROXY" ; then
    echo "no_proxy='$NO_PROXY'" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export no_proxy" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv no_proxy '$NO_PROXY'" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi
if test -n "$DEFAULT_PRINTER" ; then
    echo "PRINTER='$DEFAULT_PRINTER'" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "export PRINTER" >> $r/etc/SuSEconfig/profile.SuSEconfig
    echo "setenv PRINTER '$DEFAULT_PRINTER'" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig
fi

SAVEPATH=$PATH
if test "$r" != ""; then
PATH=$PATH:$r/usr/X11R6/bin:$r/opt/kde/bin:$r/opt/gnome/bin:$r/usr/openwin/bin
else
PATH=$PATH:/usr/X11R6/bin:/opt/kde/bin:/opt/gnome/bin:/usr/openwin/bin
fi
WINDOWMANAGER=`type -p $DEFAULT_WM`
PATH=$SAVEPATH
unset SAVEPATH
test -z "$WINDOWMANAGER" && WINDOWMANAGER=/usr/X11R6/bin/kde
echo "test -z \"\$WINDOWMANAGER\" && WINDOWMANAGER=$WINDOWMANAGER" >> $r/etc/SuSEconfig/profile.SuSEconfig
echo "export WINDOWMANAGER" >> $r/etc/SuSEconfig/profile.SuSEconfig
echo "if ( ! \${?WINDOWMANAGER} ) setenv WINDOWMANAGER $WINDOWMANAGER" >> $r/etc/SuSEconfig/csh.cshrc.SuSEconfig

test -n "$CONSOLE_MAGIC" && {
        echo "# The following sequence is needed for most non-west-european languages" >> $r/etc/SuSEconfig/profile.SuSEconfig
        echo "test \"\$TERM\" = \"linux\" -a -t && echo -en \"\\033"$CONSOLE_MAGIC\"\
 >> $r/etc/SuSEconfig/profile.SuSEconfig
        echo "# The following sequence is needed for most non-west-european languages" >> $r/etc/SuSEconfig/csh.login.SuSEconfig
        echo "test \"\$TERM\" = \"linux\" -a -t && echo -n \"\\033"$CONSOLE_MAGIC\" >> $r/etc/SuSEconfig/csh.login.SuSEconfig
}

check_md5_and_move $r/etc/SuSEconfig/profile
check_md5_and_move $r/etc/SuSEconfig/csh.login
check_md5_and_move $r/etc/SuSEconfig/csh.cshrc

if test "$SORT_PASSWD_BY_UID" = yes ; then
    for i in passwd group ; do
        cat $r/etc/$i | grep "^root:" > $r/etc/$i.t
        cat $r/etc/$i | grep -v "^+" | grep -v ":-[0-9]:-[0-9]:" | \
            grep -v "^root:" | sort -n -t : +2 >> $r/etc/$i.t
        test -s $r/etc/$i.t && {
            cat $r/etc/$i | grep ":-[0-9]:-[0-9]:" >> $r/etc/$i.t
            cat $r/etc/$i | grep "^+" >> $r/etc/$i.t
            cmp -s $r/etc/$i $r/etc/$i.t || {
                echo "Sorting /etc/$i. Saving old to /etc/$i.unsorted."
                mv $r/etc/$i $r/etc/$i.unsorted
                cp $r/etc/$i.t $r/etc/$i
            }
        }
        rm $r/etc/$i.t
    done
fi

#
# check login mode
#
test "$CHECK_INITTAB" = yes && {
    XCONFIGFILE=/etc/XF86Config
    test -f $r/etc/X11/XF86Config && XCONFIGFILE=/etc/X11/XF86Config
    if [ ! -r $r/$XCONFIGFILE -a "$DISPLAYMANAGER" != console ]; then
        echo -n "XFree86 not configured yet! No graphical login. "
        echo "Check $XCONFIGFILE."
        DISPLAYMANAGER=none
    fi

    case "$DISPLAYMANAGER" in
        kdm|KDM|xdm|XDM|gdm|GDM) INITRL=3;;
        *)               INITRL=2;;
    esac

    case "$CONSOLE_SHUTDOWN" in
        ignore)
          CA_SEARCH="^ca::ctrlaltdel.*"
          CA_LINE="#ca::ctrlaltdel:/sbin/shutdown -h -t 4 now"
        ;;
        halt)
          CA_SEARCH="^ca::ctrlaltdel.*"
          CA_LINE="ca::ctrlaltdel:/sbin/shutdown -h -t 4 now"
        ;;
        reboot)
          CA_SEARCH="^ca::ctrlaltdel.*"
          CA_LINE="ca::ctrlaltdel:/sbin/shutdown -r -t 4 now"
        ;;
        *)
          CA_SEARCH="wrzlgnmpf-this-should-not-be-found"
          CA_LINE=""
        ;;
    esac
    if test -n "$SERIAL_CONSOLE" ; then
      SERIAL_CON_LINE=${SERIAL_CONSOLE%%,*}
      SERIAL_CON_SPEED=${SERIAL_CONSOLE##*,}
      SERIAL_CON_SHORT=${SERIAL_CON_LINE##tty}
      SERIAL_CON_STRING="$SERIAL_CON_SHORT:123:respawn:/sbin/agetty -L $SERIAL_CON_SPEED $SERIAL_CON_LINE"
    else
      SERIAL_CON_LINE=""
      SERIAL_CON_SPEED=""
      SERIAL_CON_SHORT=""
      SERIAL_CON_STRING="#S0:123:respawn:/sbin/agetty -L 9600 ttyS0"
    fi

    cp -p $r/etc/inittab $r/etc/inittab.SuSEconfig || {
        echo "Unexpected Error - emergency exit..."
        rm -f $IS_RUNNING
        exit 1
    }

    cat $r/etc/inittab | \
        sed -e "s%^id:[0-9sSa-cA-C]*:initdefault:%id:$INITRL:initdefault:%" \
            -e "s%$CA_SEARCH%$CA_LINE%" \
            -e "s%.*/sbin/agetty -L.*%$SERIAL_CON_STRING%" \
        > $r/etc/inittab.SuSEconfig

    test -s $r/etc/inittab.SuSEconfig || {
        echo "Unexpected Error - emergency exit..."
        rm -f $IS_RUNNING
        exit 1
    }

    cmp -s $r/etc/inittab.SuSEconfig $r/etc/inittab || {
        mv $r/etc/inittab.SuSEconfig $r/etc/inittab
        echo "Installing new $r/etc/inittab"
    }
    rm -f $r/etc/inittab.SuSEconfig

    if test -n "$SERIAL_CON_LINE" ; then
     grep "$SERIAL_CON_LINE" $r/etc/securetty >/dev/null 2>/dev/null || \
       { 
         echo $SERIAL_CON_LINE >> $r/etc/securetty
         echo "Added $SERIAL_CON_LINE to /etc/securetty"
       }
     rm -f $r/etc/securetty.SuSEconfig
    fi
    unset INITRL
    unset SERIAL_CON_LINE
    unset SERIAL_CON_SPEED
    unset SERIAL_CON_SHORT
    unset SERIAL_CON_STRING
}

#
# setting dosemu security level.
#
if test -n "$PERMISSION_SECURITY" ; then
    for LEVEL in $PERMISSION_SECURITY ; do
        if test -f $r/etc/dosemu.users.$LEVEL -a \
                -L $r/etc/dosemu.users ; then
            rm -f $r/etc/dosemu.users
            ln -s dosemu.users.$LEVEL $r/etc/dosemu.users
        fi
    done
fi

test -x /sbin/ldconfig -a -z "$r" -a "$CHECK_NEWPACKAGE" != false && \
    /sbin/ldconfig


#
# the following stuff should be done in running system...
#
# first things, that have to be done in 'normal' systems as well as in
# 'demo mode' system.

if test -z "$r" ; then
    SUB_SCRIPTS=""
    if test -n "$ONLY_MODULE" ; then
        if test -f /sbin/conf.d/SuSEconfig.$ONLY_MODULE ; then
            SUB_SCRIPTS=/sbin/conf.d/SuSEconfig.$ONLY_MODULE
        else
            echo Module $ONLY_MODULE does not exist
        fi
    elif test "$FASTRUN" = "true" ; then
        SUB_SCRIPTS="/sbin/conf.d/SuSEconfig.sendmail /sbin/conf.d/SuSEconfig.ypclient /sbin/conf.d/SuSEconfig.kdm"
    else
        SUB_SCRIPTS="/sbin/conf.d/SuSEconfig.*"
    fi
    #
    # Now start the package skripts
    #
    for SKRIPT in $SUB_SCRIPTS ; do
        test -f $SKRIPT || continue
        case "$SKRIPT" in
          *~|*.swp|*.bak|*.sav|*.save|*.rpmsave|*.rpmorig|*.rpmnew)
            continue
            ;;
          *)
            echo Executing $SKRIPT...
            bash $SKRIPT
            ;;
        esac
    done
fi


#
# Now do things, only allowed in running 'normal' system.
#
if test -z "$r" -a ! -e $r/usr/lib/YaST/.DemoMode ; then
    #
    # we have only one package with a /usr/bin/vi symlink, but several vi
    # packages. If it does not exist, create it
    #
    if test ! -e /usr/bin/vi ; then
        rm -f /usr/bin/vi
        test -e /usr/bin/xvi && ln -s xvi /usr/bin/vi
        test -e /usr/bin/nvi && ln -s nvi /usr/bin/vi
        test -e /usr/bin/elvis && ln -s elvis /usr/bin/vi
        test -e /usr/bin/vim && ln -s vim /usr/bin/vi
    fi

    if test "$FASTRUN" != "true" ; then
        if test -x /sbin/depmod ; then
            MOD_DIR=/lib/modules/`uname -r`
            if test -d $MOD_DIR ; then
                /sbin/depmod -a 2> /dev/null > /dev/null
            fi
        fi

        if test "$HOW_TO_HANDLE_COMMERCIAL_LIBS" = link -o \
                "$HOW_TO_HANDLE_COMMERCIAL_LIBS" = clean ; then
            if test -x /usr/bin/ldd -a \
                    -x /usr/bin/dirname -a \
                    -x /usr/bin/basename ; then
                for DYNBIN in /bin/*.SuSE-dynamic \
                              /sbin/*.SuSE-dynamic \
                              /usr/bin/*.SuSE-dynamic \
                              /usr/sbin/*.SuSE-dynamic \
                              /usr/X11R6/bin/*.SuSE-dynamic ; do
                    test -x $DYNBIN || continue
                    DYNDIR=`/usr/bin/dirname $DYNBIN`
                    DYNBASE=`/usr/bin/basename $DYNBIN .SuSE-dynamic`
                    test -e $DYNDIR/$DYNBASE -a ! -L $DYNDIR/$DYNBASE && {
                        echo skipping $DYNBIN. $DYNDIR/$DYNBASE is not a link...
                        continue
                    }
                    test ! -e $DYNDIR/$DYNBASE.SuSE-static -a \
                           "$HOW_TO_HANDLE_COMMERCIAL_LIBS" != clean && {
                        echo skipping $DYNBIN. $DYNDIR/$DYNBASE.SuSE-static does not exist...
                        continue
                    }
                    LIBS_MISSING=false
                    for DUMMY in `/usr/bin/ldd $DYNBIN | grep "not found"` ; do
                        LIBS_MISSING=true
                    done
                    if test "$LIBS_MISSING" = true ; then
                        USEDDYN=$DYNBASE.SuSE-static
                        OTHERDYN=$DYNDIR/$DYNBASE.SuSE-dynamic
                    else
                        USEDDYN=$DYNBASE.SuSE-dynamic
                        OTHERDYN=$DYNDIR/$DYNBASE.SuSE-static
                    fi
                    test -e $DYNDIR/$USEDDYN || {
                        echo skipping $DYNBIN - please check for $USEDDYN...
                        continue
                    }
                    rm -f $DYNDIR/$DYNBASE
                    ln -s $USEDDYN $DYNDIR/$DYNBASE
                    test "$HOW_TO_HANDLE_COMMERCIAL_LIBS" = clean -a \
                         -e "$OTHERDYN" && {
                        echo deleting obsolete $OTHERDYN...
                        rm -f $OTHERDYN
                    }
                done
            fi
        fi

	for FDIR in /usr/X11R6/lib/X11/fonts/* ; do
            if test -d $FDIR -a -x /usr/X11R6/bin/mkfontdir -a \
                "$CHECK_NEWPACKAGE" != false ; then
                if [ ! -f $FDIR/fonts.dir -o $FDIR -nt $FDIR/fonts.dir ] ; then
                    echo "Updating X11 font directory $i..."
                    MKXPARMS=""
                    if [ -d /usr/X11R6/lib/X11/fonts/encodings ] ; then
                       MKXPARMS="-e /usr/X11R6/lib/X11/fonts/encodings"
                    fi
                    if [ -d /usr/X11R6/lib/X11/fonts/encodings/large ] ; then
                       MKXPARMS="$MKXPARMS -e /usr/X11R6/lib/X11/fonts/encodings/large"
                    fi
                    /usr/X11R6/bin/mkfontdir $MKXPARMS $FDIR
                fi
            fi
        done

        if test -n "$CREATE_INFO_DIR" -a "$CREATE_INFO_DIR" = "yes" -a \
            "$CHECK_NEWPACKAGE" != false ; then
            if test -x /usr/bin/perl -a -d /usr/share/info/ ; then
                if test ! -f /usr/share/info/dir \
                    -o /usr/share/info/dir -ot /usr/share/info/ \
                    -o /usr/share/info/dir -ot /usr/info/ \
                    -o /usr/share/info/dir -ot /usr/lib/info/ \
                    -o /usr/share/info/dir -ot /usr/local/info/ \
                    -o /usr/share/info/dir -ot /usr/local/lib/info/ \
                    -o /usr/share/info/dir -ot /usr/X11R6/info/ \
                    -o /usr/share/info/dir -ot /usr/X11R6/lib/info/ \
                    -o /usr/share/info/dir -ot /usr/X11R6/lib/xemacs/info/ \
                    ; then
                    my_test_write /usr/share/info && {
                        echo "Creating /usr/share/info/dir..."
                        /usr/bin/mkinfodir
                    }
                fi
            fi
        fi

        if test -x /usr/bin/mandb -a "$CHECK_NEWPACKAGE" != false ; then
            echo "Processing index files of all manpages..."
            /usr/bin/mandb -q -s
        fi
    fi

    if test -n "$CHECK_PERMISSIONS" -a \
            -x /usr/bin/perl -a -x /usr/bin/chkstat ; then

        PERMISSIONS_FILES=""
	PACKAGE_PERMFILES=(/etc/permissions.d/*)
	PACKAGE_PERMFILES=(${PACKAGE_PERMFILES[*]##*/})
	PACKS=${PACKAGE_PERMFILES[*]%%.*}
	if test -n "$PACKS" ; then
	    test -x /usr/bin/sort && {
	        PACKS=`for j in $PACKS ; do echo $j ; done | /usr/bin/sort -u`
	    }
	    RPMPACKS=(`rpm -q $PACKS 2> /dev/null`)
	    RPMPACKS=(${RPMPACKS[*]%%-*})
            for i in ${RPMPACKS[*]} ; do
                test -e /etc/permissions.d/$i && \
                    PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions.d/$i"
                for PERMEXT in $PERMISSION_SECURITY ; do
                    test -e /etc/permissions.d/$i.$PERMEXT && \
                        PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions.d/$i.$PERMEXT"
                done
            done
	fi
    
        test -e /etc/permissions && \
          PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions"
        for PERMEXT in $PERMISSION_SECURITY ; do
            test -e /etc/permissions.$PERMEXT && \
                PERMISSIONS_FILES="$PERMISSIONS_FILES /etc/permissions.$PERMEXT"
        done
    
        for PERMFILE in $PERMISSIONS_FILES ; do
            if test "$CHECK_PERMISSIONS" = "set" ; then
    	    /usr/bin/chkstat -set $PERMFILE
            elif test "$CHECK_PERMISSIONS" = "warn" ; then
    	    /usr/bin/chkstat $PERMFILE
            fi
        done
    fi

    if test ! -e /sbin/conf.d/SuSEconfig.sendmail -a ! -e /etc/aliases.db ; then
        #
        # maybe we have smail installed - make sure /etc/aliases is setup
        # correctly
        #
        NEWALIASES=`type -p newaliases`
        test -n "$NEWALIASES" && eval $NEWALIASES
    fi
fi

#
# safety-check: look for duplicated variables in /etc/rc.config
#
MYTMP=`mktemp -d /tmp/rcconfigchk.XXXXXX`
grep -v "^#" $r/etc/rc.config | grep -v "^$" | sort -u > $MYTMP/single
grep -v "^#" $r/etc/rc.config | grep -v "^$" | sort > $MYTMP/double
diff $MYTMP/single $MYTMP/double > $MYTMP/toomuch
if [ $? != 0 ] ; then
  echo "This is a warning message." > $MYTMP/rc.config_check
  echo "The following variables seem to be doubled in /etc/rc.config." >> $MYTMP/rc.config_check
  cat $MYTMP/toomuch >> $MYTMP/rc.config_check
  echo "Please check which of the instances is correct." >> $MYTMP/rc.config_check
  test -d /var/adm/notify/warnings && \
    mv $MYTMP/rc.config_check /var/adm/notify/warnings
fi
rm -rf $MYTMP

#
# now look for reports and mail them
#
if test -z "$r" -a "$SENDMAIL_TYPE" != "YAST_ASK" -a \
    -x /usr/bin/mail -a -x /usr/sbin/sendmail -a \
    -n "$MAIL_REPORTS_TO" -a "$FASTRUN" != "true" ; then
    if test "$MAIL_LEVEL" = all ; then
        FILES_TO_MAIL="/var/adm/notify/messages/* \
                       /var/adm/notify/warnings/* \
                       /var/adm/notify/log/*"
    else
        FILES_TO_MAIL="/var/adm/notify/messages/* \
                       /var/adm/notify/warnings/*"
    fi
    for FILE in $FILES_TO_MAIL ; do
        test -f $FILE || continue
        cat $FILE | /usr/bin/mail $MAIL_REPORTS_TO \
            -s "SuSEconfig: `basename $FILE`"
        rm -f $FILE
        sleep 2
    done
    rm -f /var/adm/notify/log/*
fi

#
# Now store date for next call
#
if test -z "$r" -a "$FASTRUN" != "true" ; then
    if test -x /bin/date ; then
        /bin/date > $LASTRUN
    else
        cat /dev/null > $LASTRUN
    fi
fi

#
# we have finished and can remove our lock file.
#
rm -f $IS_RUNNING

echo "Finished."
exit 0
