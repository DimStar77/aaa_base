#!/bin/sh
# Copyright 1994, Patrick Volkerding, Moorhead, Minnesota USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# (c) 1996 S.u.S.E. GmbH, Fuerth, Germany
#
# Store any install/delete.sh that comes with a package.
# This script is to be executed after the package is removed.
# Handle S.u.S.E.-Linux styled links. Removed '-r' and '-m'
# options.

usage() {
 cat << EOF
Usage: installpkg package_name
       installpkg -warn package_name

Usually used to install a .tgz or .tar.gz package like this:
   installpkg xf_bin.tgz

-warn does not install, but tells you what would be deleted or overwritten.

EOF
}

# These tests, while by no means exhaustive, will give a usage message
# and exit with a wide range of bad input.

if [ "$1" = "-warn" -a -f "$2" ]; then # -warn
 echo "Scanning the contents of $2..."
 echo
 mkdir -p /tmp/scan
 ( cd /tmp/scan ; tar xzf - install/doinst.sh ) < $2 2> /dev/null
 if [ -r /tmp/scan/install/doinst.sh ]; then
  if cat /tmp/scan/install/doinst.sh | fgrep 'rm -rf' 1>/dev/null 2>/dev/null ; then
   cat /tmp/scan/install/doinst.sh | fgrep 'rm -rf' > /tmp/scan/install/delete
   echo "The following locations will be completely WIPED OUT to allow symbolic"
   echo "links to be made. (We're talking 'rm -rf') These locations may be files,"
   echo "or entire directories."
   echo
   echo "Be sure you've backed up anything at these locations that you want to"
   echo "save before you install this package:"
   echo
   cat /tmp/scan/install/delete | cut -f 3,7 -d ' ' | tr ' ' '/'
  fi
  if [ -d /tmp/scan ]; then
   ( cd /tmp/scan ; rm -rf install ) 2> /dev/null
   ( cd /tmp ; rmdir scan ) 2> /dev/null
  fi
 fi
 echo
 echo "The following files will be overwritten when installing this package."
 echo "Be sure they aren't important before you install this package:"
 echo
 ( tar tzvvf - ) < $2 | fgrep -v 'drwx'
 echo "You've been warned."
 exit
fi
if [ $# = 0 ]; then
 usage;
 exit
fi
if [ $# = 1 -a ! -r "$1" ]; then
 echo "Package not found: $1"
 echo
 usage;
 exit
fi

 for package in $* ; do
  echo "Installing package $package... "
  # This stuff looks for symbolic links that also belong to other packages and
  # leaves them in place. That way, if you have a couple package pointing to
  # /usr/include on the cdrom and delete one, you'll still have include files.
  shortname=`basename $package .tgz`
  ADM_DIR="/var/adm"
  TMP=/tmp
  TMP_FILELIST="$TMP/tmp_filelist"
  # Save copy of deletescript / remove outdated one
  if [ -r $ADM_DIR/scripts/$shortname.delete ]; then
   if [ ! -d $ADM_DIR/removed_scripts ]; then
    mkdir -p $ADM_DIR/removed_scripts
   fi
   mv $ADM_DIR/scripts/$shortname.delete $ADM_DIR/removed_scripts 1> /dev/null 2>&1
  else
   rm -f $ADM_DIR/removed_scripts/$shortname.delete 1> /dev/null 2>&1
  fi
  if [ -r $ADM_DIR/scripts/$shortname ]; then
   cat $ADM_DIR/scripts/$shortname | fgrep 'rm -rf' | sort -u > $TMP/del_link_list
   if [ ! -d $ADM_DIR/removed_scripts ]; then
    mkdir -p $ADM_DIR/removed_scripts
   fi
   mv $ADM_DIR/scripts/$shortname $ADM_DIR/removed_scripts 1> /dev/null 2>&1
   cat $ADM_DIR/scripts/* | fgrep 'rm -rf' | sort -u > $TMP/required_links
   comm -23 $TMP/del_link_list $TMP/required_links > $TMP/delscript
   ( cd / ; sh $TMP/delscript )
   rm -f $TMP/del_link_list $TMP/required_links $TMP/delscript
  fi
  echo "PACKAGE NAME:     $shortname" > /var/adm/packages/$shortname
  COMPRESSED=`gzip -l $package | fgrep -v uncompressed_name | cut -b0-9`
  UNCOMPRESSED=`gzip -l $package | fgrep -v uncompressed_name | cut -b10-19`
  echo "COMPRESSED PACKAGE SIZE:     `expr $COMPRESSED / 1024` K" >> /var/adm/packages/$shortname
  echo "UNCOMPRESSED PACKAGE SIZE:     `expr $UNCOMPRESSED / 1024` K" >> /var/adm/packages/$shortname
  echo "PACKAGE LOCATION: $package" >> /var/adm/packages/$shortname
  packagedir="`dirname $package`"
  for file in $packagedir/disk* $packagedir/package_descriptions ; do
    if [ ! "$file" = "$packagedir/disk??*" ]; then
      if [ -r "$file" ]; then
        echo "PACKAGE DESCRIPTION:" >> /var/adm/packages/$shortname
        if strings $file | uniq | fgrep "$shortname:" >> /var/adm/packages/$shortname 2> /dev/null ; then
          echo "PACKAGE DESCRIPTION:"
          strings $file | uniq | fgrep "$shortname:"
          break;
        fi
      fi
    fi
  done
  ( cd / ; tar -xzlpvf - ) < $package >> $TMP_FILELIST 2> /dev/null
  if [ -f /install/list ]; then
    echo "CREATED FILES:" >> /var/adm/packages/$shortname
    cat /install/list >> /var/adm/packages/$shortname
    rm -f /install/list
  fi
  echo "FILE LIST:" >> /var/adm/packages/$shortname
  cat $TMP_FILELIST >> /var/adm/packages/$shortname
  rm -f $TMP_FILELIST

  if [ -f /install/doinst.sh ]; then
   echo "Executing install script for $package..."
   export SLDIRERROR=" is a directory - this will lead into trouble. Please rename and reinstall package."
   ( cd / ; sh install/doinst.sh -install; )
  fi
  # Clean up the mess...
  if [ -f /install/doinst.sh ]; then
   cp /install/doinst.sh /var/adm/scripts/$shortname
   chmod 755 /var/adm/scripts/$shortname
   rm -f /install/doinst.sh
  fi
  # Backup an existing deletescript
  if [ -f /install/delete.sh ]; then
   cp /install/delete.sh /var/adm/scripts/$shortname.delete
   chmod 755 /var/adm/scripts/$shortname.delete
   rm -f /install/delete.sh
  fi
  if [ -d /install ]; then
   (cd /install ; rm -r -f doin* 1> /dev/null 2>&1 )
   rmdir /install 1> /dev/null 2>&1
  fi
  echo
 done
echo
