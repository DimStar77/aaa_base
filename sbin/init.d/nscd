#! /bin/sh
# Copyright (c) 1995-1998 SuSE GmbH Nuernberg, Germany.
#
# Author: ro@suse.de
#
# /sbin/init.d/nscd
#   and its symbolic  link
# /sbin/rcnscd
#

. /etc/rc.config

# Determine the base and follow a runlevel link name.
base=${0##*/}
link=${base#*[SK][0-9][0-9]}

# Force execution if not called by a runlevel directory.
test $link = $base && START_NSCD=yes
test "$START_NSCD" = yes || exit 0
test -x /usr/sbin/nscd || exit 0

case `/bin/uname -r` in
    0.*|1.*|2.0.*|2.1.*)
        echo No Name Service Cache Daemon started - needs at least kernel version 2.2.
        exit 0
    ;;
esac

# The echo return value for success (defined in /etc/rc.config).
return=$rc_done
case "$1" in
    start)
	echo -n "Starting Name Service Cache Daemon"

	secure=` cat /etc/nsswitch.conf | while read curline ; do
	  table=${curline%:*}
	  entries=${curline##$table:}
	  table=${table%%[^a-z]*}
	  case $table in
	    passwd*|group*|hosts)
	      for entry in $entries ; do
		case $entry in
		  nisplus*)
		    /usr/sbin/nscd_nischeck $table || echo "-S $table,yes"
		  ;;
		esac
	      done
	    ;;
	  esac
	done`

	startproc /usr/sbin/nscd $secure || return=$rc_failed

	echo -e "$return"
	;;
    stop)
	echo -n "Shutting down Name Service Cache Daemon"

	killproc -TERM /usr/sbin/nscd || return=$rc_failed

	echo -e "$return"
	;;
    restart)
	## If first returns OK call the second, if first or
	## second command fails, set echo return value.
	$0 stop  &&  $0 start  ||  return=$rc_failed
	;;
    reload)
	## Choose ONE of the following two cases:

	## First possibility: A few services accepts a signal
	## to reread the (changed) configuration.

	#echo -n "Reload service foo"
	#killproc -HUP /usr/sbin/foo || return=$rc_failed
	#echo -e "$return"

	## Exclusive possibility: Some services must be stopped
	## and started to force a new load of the configuration.

	$0 stop  &&  $0 start  ||  return=$rc_failed
	;;
    status)
	echo -n "Checking for Name Service Cache Daemon: "

	checkproc /usr/sbin/nscd && echo OK || echo No process
	;;
    *)
	echo "Usage: $0 {start|stop|status|restart|reload}"
	exit 1
	;;
esac

# Inform the caller not only verbosely and set an exit status.
test "$return" = "$rc_done" || exit 1
exit 0
